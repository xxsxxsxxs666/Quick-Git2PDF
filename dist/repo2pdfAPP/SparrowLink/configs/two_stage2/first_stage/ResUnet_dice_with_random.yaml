# _base_: Null
mode: infer
batch_size: 8

iters: 1000
learning_rate: 0.0001
visual:
  use_tensorboard: True
  show_image_index: [0]  # Set None, than current segmentation output will not show in tensorboard

seed: 0
transform:
  patch_size: [160, 160, 96]
  use_config: True
  fixed: []
  random:
    - {name: RandCropByPosNegLabeld, parameter: {keys: ['image', 'label'], spatial_size: [160, 160, 96], num_samples: 4, pos: 3, neg: 1, image_key: "image", label_key: "label", image_threshold: 0}}
    - {name: GaussianNoiseD, parameter: {keys: ['image'] , noise_variance: [0, 0.1], prob: 0.1}}
    - {name: GaussianBlurD, parameter: {keys: ["image"], blur_sigma: [0.5, 1.15], prob: 0.1}}
    - {name: BrightnessMultiplicativeD, parameter: {keys: ["image"], prob: 0.15, multiplier_range: [0.7, 1.25]}}
    - {name: ContrastAugmentationD, parameter: {keys: ["image"], prob: 0.15}}
    # - {name: SimulateLowResolutionD, parameter: {keys: ["image"], zoom_range: [0.7, 1], prob: 0.20, order_upsample: 3, order_downsample: 0, ignore_axes: None}}
    - {name: GammaD, parameter: {keys: ["image"], gamma_range: [0.7, 1.5], invert_image: False, per_channel: True, retain_stats: True, prob: 0.1}}
    - {name: RandFlipd, parameter: {keys: ["image", "label"], prob: 0.5}}
  infer: []

experiments_path: ./experiments/Graduate_project/two_stage2/first_stage/ResUnet

train:
  optimizer:
    name: Adam
    parameter: {}
  lr_scheduler:
    name: StepLR
    parameter: {step_size: 10, gamma: 0.95}
  val_interval: 1
  train_loss:
    name: DiceLoss
    parameter: {to_onehot_y: True, softmax: True}
  val_metric:
    name: DiceMetric
    parameter: {include_background: False, reduction: "mean"}

  pretrain_weight: # ./experiments/Graduate_project/multi_phase/pretrain/ResUnet/checkpoint/best_metric_model.pth
  continue_train: # ./experiments/13_01_2023_12_25_37/checkpoint/best_metric_model_training_stage.pth
  overlap: 0.25
  sw_batch_size: 12
  mirror_axes: []
  loader:
    val_set: ./data/multi_phase_select/final_version_crop_train/train/main/val.txt
    train_set: ./data/multi_phase_select/final_version_crop_train/train/main/train.txt
    img: ./data/multi_phase_select/final_version_crop_train/train/main/img_crop
    label: ./data/multi_phase_select/final_version_crop_train/train/main/label_crop_clip
    persist: False # ./experiments/Graduate_project/two_stage2/first_stage/persist_cache
    cache: 0
    num_workers: 4

infer:
  pretrain_weight: ./experiments/Graduate_project/two_stage2/first_stage/ResUnet/checkpoint/best_metric_model.pth
  output_path: ./experiments/Graduate_project/two_stage2/first_stage/ResUnet/main_infer
  save_data: True
  overlap: 0.5
  sw_batch_size: 12
  mirror_axes: []
  loader:
    data_path: ./data/multi_phase_select/final_version_crop_train/train/main/img_crop
    persist: False
    cache: 0
    split_mode: all

#model:
#  name: UNet
#  use_default: False
#  model_parameter:
#    spatial_dims: 3
#    in_channels: 1
#    out_channels: 2
#    channels: [16, 32, 64, 128, 256]
#    strides: [2, 2, 2, 2]
#    num_res_units: 2
#    norm: BATCH # name is in monai.networks.layers.names

model:
  name: UNet
  use_default: False
  model_parameter:
    spatial_dims: 3
    in_channels: 1
    out_channels: 2
    channels: [16, 32, 64, 128, 256]
    strides: [2, 2, 2, 2]
    num_res_units: 2
    norm: BATCH # name is in monai.networks.layers.names